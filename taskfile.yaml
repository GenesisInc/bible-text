version: 3

vars:
  setup_tmp:
    sh: mkdir -p tmp && echo tmp
  out: tmp/out.csv
  show_cnt: 16
  entities_csv_file: data/bible_entities.csv
  entities_json_file: data/bible_entities.json
  bible_data_json: data/bible_data.json
  bible_data_csv: data/bible_data.csv

tasks:
  default: task -a

  load-jworg:
    cmds:
      - |
        uv run main.py load-jworg \
          --input-dir data/bibles/jw_org/nwt \
          --output-dir data/tmp

        # uv run main.py load-jworg --input-dir data/bibles/jw_org/nwt --output-dir here

  load-gateway:
    cmds:
      - |
        uv run main.py load-gateway \
          --input-dir data/bibles/bible_gateway \
          --output-dir here

  merge-nwt-to-multi-translation:
    cmds:
      - |
        uv run main.py merge-translation \
          --translation nwt \
          --input-file here/nwt_bible.json \
          --output-file here/multi_translation.json

  uv-sync:
    cmds:
      - |
        uv sync
        uv run python3 -m spacy download en_core_web_sm

  test:
    cmds:
      - |
        uv run pytest test_bible.py

  run: task -p generate-json extract

  status:
    silent: true
    cmds:
      - |
        jq '
        {
          total_books: (.nwt | keys | length),
          total_chapters: (.nwt | to_entries | map(.value | keys | length) | add),
          total_verses: (.nwt | to_entries | map(.value | to_entries | map(.value | keys | length) | add) | add)
        }' {{.bible_data_json}} | mlr --j2p --barred cat

  convert_2_csv.moved:
    cmds:
      - |
        jq -r '
          .nwt | to_entries[] as $book_entry
          | $book_entry.value | to_entries[] as $chapter_entry
          | $chapter_entry.value | to_entries[] as $verse_entry
          | [$book_entry.key, $chapter_entry.key, $verse_entry.key, $verse_entry.value] | @csv
        ' {{.bible_data_json}} > {{.bible_data_csv}}

  out:
    silent: true
    cmds:
      - |
        total=$(mlr --from {{.out}} --csv --headerless-csv-output count)
        printf "Summary:\n   Total: ${total} records\n"
        top=$(({{.show_cnt}} / 2 + 1))
        btm=$(({{.show_cnt}} / 2 ))

        if [ "$total" -le {{.show_cnt}} ]; then
          # For fewer than or equal to {{.show_cnt}} records, display all
          echo "   Showing all $total records"
          cat "{{.out}}" | mlr --c2p --barred cat -n
        else
          # For more than {{.show_cnt}} records, show first ${btm} and last ${btm}
          echo "   Showing {{.show_cnt}} of $total records"
          (head -n${top} "{{.out}}" && tail -n${btm} "{{.out}}") | mlr --c2p --barred cat -n
        fi
